apiVersion: v1
kind: ConfigMap
metadata:
  name: example-app-config
  namespace: example-app
data:
  application-production.properties: |
    application.name=example-app-example-app
    server.port=8082
    application.version={{DEPLOY_ENV}}-v1
    application.groups=ogs-core-apps
    server.servlet.context-path=/
    management.endpoints.web.base-path=/manage-v1
    management.endpoints.web.exposure.include=*
    management.endpoint.prometheus.enabled=true
    management.metrics.export.prometheus.enabled=true
    management.endpoint.restart.enabled=true
    management.endpoint.refresh.enabled=true
    management.endpoint.web.exposure.inculde=info,refresh,keepalive
    samplerType=remote
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-app-deployment
  namespace: example-app
  labels:
    app: example-app
spec:
  selector:
    matchLabels:
      app: example-app
  template:
    metadata:
      labels:
        app: example-app
    spec:
      volumes:
      - name: example-app-config-store
        configMap:
          name: example-app-config
      containers:
      - name: example-app-container
        image: example-app:3.0-SNAPSHOT
        ports:
        - containerPort: 8082
        volumeMounts:
        - mountPath: "/work/config/"
          name: example-app-config-store
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: production
        - name: KAFKA_CONFIG_PATH
          value: /work/config/
        - name: SPRING_CONFIG_LOCATION
          value: /work/config/
      - name: jaeger-agent
        image: jaegertracing/jaeger-agent:1.19.2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5775
          name: zk-compact-trft
          protocol: UDP
        - containerPort: 5778
          name: config-rest
          protocol: TCP
        - containerPort: 6831
          name: jg-compact-trft
          protocol: UDP
        - containerPort: 6832
          name: jg-binary-trft
          protocol: UDP
        - containerPort: 14271
          name: admin-http
          protocol: TCP
        args:
        - --reporter.grpc.host-port=dns:///with-sampling-collector-headless.jaeger-operator:14250
        - --reporter.type=grpc
---
apiVersion: v1
kind: Service
metadata:
  name: example-app-service
  namespace: example-app
spec:
  type: NodePort
  selector:
    app: example-app
  ports:
  - protocol: TCP
    port: 8082
    targetPort: 8082
    nodePort: 32500

